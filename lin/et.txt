
مقدمة لغة بايثون
مستوى الصعوبة: أساسي
آخر تحديث: 23 يناير 2020
Python هي لغة برمجة عالية المستوى للأغراض العامة مستخدمة على نطاق واسع. تم إنشاؤه بواسطة Guido van Rossum في عام 1991 وتم تطويره بواسطة Python Software Foundation. تم تصميمه مع التركيز على قابلية قراءة الكود ، ويسمح تركيبه للمبرمجين بالتعبير عن مفاهيمهم في عدد أقل من سطور التعليمات البرمجية.

Python هي لغة برمجة تتيح لك العمل بسرعة ودمج الأنظمة بشكل أكثر كفاءة.

هناك نسختان رئيسيتان من Python: Python 2 و Python 3 . كلاهما مختلف تمامًا.

البدء ببرمجة بايثون:

1) البحث عن مترجم:

قبل أن نبدأ برمجة Python ، نحتاج إلى مترجم فوري لترجمة برامجنا وتشغيلها. هناك بعض المترجمين الفوريين عبر الإنترنت مثل https://ide.geeksforgeeks.org/ أو http://ideone.com/ أو http://codepad.org/ يمكن استخدامها لتشغيل برامج Python دون تثبيت مترجم.

نظام التشغيل Windows : هناك العديد من المترجمين الفوريين المتاحين مجانًا لتشغيل برامج Python النصية مثل IDLE (بيئة التطوير المتكاملة) التي تأتي مرفقة مع برنامج Python الذي تم تنزيله من http://python.org/ .

Linux : تأتي Python مثبتة مسبقًا مع توزيعات Linux الشهيرة مثل Ubuntu و Fedora. للتحقق من إصدار Python الذي تقوم بتشغيله ، اكتب "python" في المحاكي الطرفي. يجب أن يبدأ المترجم الشفوي ويطبع رقم الإصدار.

macOS : بشكل عام ، يأتي Python 2.7 مرفقًا بنظام macOS. سيتعين عليك تثبيت Python 3 يدويًا من http://python.org/ .

2) كتابة برنامجنا الأول:

فقط اكتب الكود التالي بعد أن تبدأ المترجم.


    
  
# Script Begins
  
    
  
print("GeeksQuiz")
  
    
  
# Scripts Ends
  
   
انتاج:

المهوسون
دعنا نحلل البرنامج النصي سطرا بسطر.

السطر 1: [ # Script Begins] في Python ، تبدأ التعليقات بـ #. يتم تجاهل هذا البيان من قبل المترجم ويعمل بمثابة توثيق لكودنا.

السطر 2: [ print (“GeeksQuiz”)] لطباعة شيء ما على وحدة التحكم ، يتم استخدام وظيفة print (). تضيف هذه الوظيفة أيضًا سطرًا جديدًا بعد طباعة رسالتنا (على عكس C). لاحظ أنه في Python 2 ، "print" ليست وظيفة بل كلمة أساسية وبالتالي يمكن استخدامها بدون أقواس. ومع ذلك ، في Python 3 ، إنها وظيفة ويجب أن يتم استدعاؤها بين أقواس.

السطر 3: [ # Script Ends] هذا مجرد تعليق آخر مثل السطر 1.

>>>>>>>>>>>>>>>>>>>>>>>
مزايا لغة بايثون وتطبيقاتها
مستوى الصعوبة: أساسي
آخر تحديث: 30 يونيو 2021
Python هي لغة برمجة ديناميكية عالية المستوى ومفسرة وذات أغراض عامة تركز على قابلية قراءة الكود. لديها خطوات أقل بالمقارنة مع Java و C. تأسست في عام 1991 من قبل المطور Guido Van Rossum. تُصنف بايثون من بين اللغات الأكثر شهرة والأسرع نموًا في العالم. بايثون لغة قوية ومرنة وسهلة الاستخدام. بالإضافة إلى ذلك ، المجتمع نشط للغاية هناك. يتم استخدامه في العديد من المنظمات لأنه يدعم نماذج البرمجة المتعددة. كما يقوم بإدارة الذاكرة التلقائية.
 

مزايا : 
وجود وحدات الطرف الثالث 
مكتبات دعم واسعة النطاق (NumPy للحسابات العددية ، Pandas لتحليلات البيانات ، إلخ) 
المصدر المفتوح وتنمية المجتمع 
متعدد الاستخدامات ، سهل القراءة والتعلم والكتابة
هياكل بيانات سهلة الاستخدام 
لغة عالية المستوى 
لغة مكتوبة ديناميكيًا (لا حاجة لذكر نوع البيانات بناءً على القيمة المعينة ، فهي تأخذ نوع البيانات) 
لغة الشيئية 
محمول وتفاعلي
مثالية للنماذج الأولية - توفر المزيد من الوظائف بتشفير أقل
كفاءة عالية (يوفر تصميم Python النظيف الموجه للكائنات تحكمًا محسّنًا في العملية ، وقد تم تجهيز اللغة بقدرات ممتازة لمعالجة النصوص والتكامل ، بالإضافة إلى إطار اختبار الوحدة الخاص بها ، مما يجعلها أكثر كفاءة.)
(إنترنت الأشياء) فرص إنترنت الأشياء
اللغة المفسرة
محمول عبر أنظمة التشغيل 
 

التطبيقات: 
تطبيقات سطح المكتب القائمة على واجهة المستخدم الرسومية
تصميم الجرافيك وتطبيقات معالجة الصور والألعاب والتطبيقات العلمية / الحسابية
أطر الويب والتطبيقات 
 تطبيقات المؤسسات والأعمال 
 أنظمة التشغيل 
تعليم
الوصول إلى قاعدة البيانات
تطوير اللغة 
 النماذج 
تطوير البرمجيات
 
المنظمات التي تستخدم بايثون: 

Google (مكونات Google spider ومحرك البحث) 



000لغة برمجة بايثون

آخر تحديث: ٤ سبتمبر ٢٠٢١
Python هي لغة برمجة عالية المستوى وذات أغراض عامة وشائعة جدًا. يتم استخدام لغة برمجة Python (أحدث Python 3) في تطوير الويب ، وتطبيقات التعلم الآلي ، جنبًا إلى جنب مع جميع التقنيات المتطورة في صناعة البرمجيات. لغة البرمجة Python مناسبة جدًا للمبتدئين ، وكذلك للمبرمجين ذوي الخبرة مع لغات برمجة أخرى مثل C ++ و Java.
لغة البرمجة Python Python-Tutorial

سيساعدك هذا البرنامج التعليمي Python المصمم خصيصًا على تعلم لغة برمجة Python بأكثر الطرق فعالية ، مع موضوعات من الأساسيات إلى المتقدمة (مثل Web-scraping و Django و Deep-Learning وما إلى ذلك) مع أمثلة.


فيما يلي بعض الحقائق حول لغة برمجة بايثون:

تعد Python حاليًا أكثر لغات البرمجة استخدامًا متعددة الأغراض وعالية المستوى.
تسمح لغة البرمجة Python بالبرمجة في النماذج الإجرائية والموجهة للكائنات.
تكون برامج Python عمومًا أصغر من لغات البرمجة الأخرى مثل Java. يتعين على المبرمجين كتابة متطلبات مسافة بادئة أقل نسبيًا للغة ، مما يجعلها قابلة للقراءة في كل وقت.
يتم استخدام لغة Python من قبل جميع الشركات التقنية العملاقة مثل Google و Amazon و Facebook و Instagram و Dropbox و Uber ... إلخ.
أكبر قوة في Python هي مجموعة ضخمة من المكتبات القياسية التي يمكن استخدامها في ما يلي:
التعلم الالي
تطبيقات واجهة المستخدم الرسومية (مثل Kivy و Tkinter و PyQt وما إلى ذلك)
أطر عمل الويب مثل Django (يستخدمها YouTube و Instagram و Dropbox)
معالجة الصور (مثل OpenCV ، وسادة)
كشط الويب (مثل Scrapy و BeautifulSoup و Selenium)
أطر الاختبار
الوسائط المتعددة
الحوسبة العلمية
معالجة النصوص وغيرها الكثير ..
المقالات الأخيرة عن بايثون!
أمثلة على برمجة
بايثون إخراج بايثون وأسئلة الاختيار من متعدد
 

الأساسيات ، الإدخال / الإخراج ، أنواع البيانات ، المتغيرات ، المشغلون ، تدفق التحكم ، الوظائف ، المفاهيم الموجهة للكائنات ، معالجة الاستثناءات ، مجموعات Python ، إطار عمل Django ، تحليل البيانات ، Numpy ، Pandas ، التعلم الآلي باستخدام Python ، Python GUI ، الوحدات النمطية في Python ، العمل مع قواعد البيانات والمتنوعة والتطبيقات والمشاريع ،أسئلة متعددة الخيارات

دروس بايثون -
أساسيات بايثون
مقدمة لغة بايثون
أساسيات بايثون 3
بايثون لغة الجيل الجديد
فرق مهم بين python 2.x و python 3.x مع مثال
الكلمات المفتاحية في بايثون | المجموعة 1 ، المجموعة 2
مساحات الأسماء والنطاق في بايثون
البيان والمسافة البادئة والتعليق في بايثون
هيكلة برامج بايثون
كيف تتحقق مما إذا كانت السلسلة كلمة أساسية صالحة في Python؟
كيفية تعيين قيم للمتغيرات في بايثون ولغات أخرى
كيف تطبع بدون سطر جديد في بايثون؟
صناعة القرار
برنامج الآلة الحاسبة الأساسي باستخدام Python
مزايا لغة بايثون وتطبيقاتها

الإدخال / الإخراج
أخذ المدخلات في بايثون
أخذ المدخلات من وحدة التحكم في بايثون
أخذ مدخلات متعددة من المستخدم في بايثون
طرق إدخال بايثون للبرمجة التنافسية
الثغرة الأمنية في دالة الإدخال () - Python 2.x
بايثون | الإخراج باستخدام وظيفة الطباعة ()
كيف تطبع بدون سطر جديد في بايثون؟
بايثون | نهاية المعلمة في الطباعة ()
بايثون | معلمة sep في الطباعة ()
بايثون | تنسيق الإخراج

أنواع البيانات
مقدمة لأنواع البيانات
سلاسل
قائمة
مجموعات
مجموعات
قاموس
المصفوفات
المتغيرات
المتغيرات وشرط التعبير والوظيفة
أقصى قيمة ممكنة لعدد صحيح في بيثون؟
المتغيرات العالمية والمحلية في بيثون
حجج التعبئة والتفريغ في بيثون
اكتب التحويل في بيثون
كائنات بايت مقابل سلسلة في بيثون
طباعة متغير واحد ومتعدد
متغير المبادلة
المتغيرات الخاصة
__name__ (متغير خاص) في بايثون

العاملين
عامل أساسي في لغة بيثون
منطقي وأحادي المعامل ليس عامل في منطقية
عامل ثلاثي
عامل قسمة في بيثون
زيادة تحميل المشغل في بايثون
أي & الكل في بيثون
عوامل التشغيل الداخلية والقياسية في بيثون
دالة المشغل في لغة الثعبان | مجموعة 1
المشغل الداخلي | مجموعة 1
منطق بوابات في بايثون
بايثون | أ + = ب ليس دائما أ = أ + ب
الفرق بين == والمشغل في بايثون
مشغلي الهوية والعضوية في Python | في ، ليس في ، هو ، ليس كذلك

تدفق التحكم
الحلقات
الحلقات وبيانات التحكم (متابعة ، كسر وتمرير) في بايثون
تقنية التكرار الحلقي في الثعبان
المدى مقابل xrange على بيثون
برامج لطباعة تقنية الهرم في بيثون
مقارنة التسلسل في بيثون
مع آخر
وظيفة التبديل
استخدام التكرار في بيثون بشكل فعال
Python Itertools
Python __iter __ () و __next __ () | تحويل كائن إلى مكرر
بايثون | الفرق بين التكرارات والمكرر
مولدات في بيثون
تعبير المولدات في بيثون

المهام
الوظائف في بايثون
طريقة الفئة مقابل الطريقة الثابتة في بايثون
اكتب دالة فارغة في بيان تمرير بايثون
العائد بدلا من العائد
إرجاع قيم متعددة
وظائف جزئية في بايثون
وظائف First Class في Python
معالجة دقيقة
* أرغس و ** كوارز
إغلاق بايثون
وظيفة ديكور
مصممون في بايثون
الديكور مع المعلمات في بايثون
Memoization باستخدام الديكور في Python
مساعدة تعمل في بايثون
بايثون | __import __ () وظيفة
بايثون | لا يُرجع النطاق () مكررًا
كوروتين في بايثون
وظائف بايثون بت على int (طول بت ، إلى_بايت و from_bytes)

مفاهيم كائنية التوجه
موضوعات المستوى المتوسط ​​من Python3
الطبقة والكائن والأعضاء
إخفاء البيانات وطباعة العناصر
الميراث ، أمثلة على الكائن ، والفئة الفرعية ، والسوبر
تعدد الأشكال في بيثون
متغير فئة وثابت في بيثون
طريقة الفصل والطريقة الثابتة في بيثون
تغيير أعضاء الفصل
البناة في بايثون
المدمرات في بايثون
وظيفة من الدرجة الأولى
Metaprogramming مع metaclass
فئة والمثيل سمة
انعكاس
جمع القمامة

معالجة الاستثناء
معالجة الاستثناء
استثناء من تحديد المستخدم
استثناء مدمج
تنظيف العمل
خطأ Nzec
حاول باستثناء بايثون

مجموعات بايثون
عدادات
أمر ديكت
ديكت افتراضي
سلسلة خريطة
مسمى
ديكيو
كومة
المجموعات
المجموعات
المجموعات
إطار جانغو
دروس جانغو
أساسيات جانغو
مقدمة وتركيب Django
أشكال جانغو
المشاهدات في Django
موديلات جانغو
قوالب جانغو
ToDo webapp باستخدام Django
تطبيق أخبار جانغو
تطبيق الطقس باستخدام Django

تحليل البيانات
تصور البيانات باستخدام بوكيه
تحليل البيانات الاستكشافية في بايثون
تصور البيانات بمخططات مختلفة في بايثون
تحليل البيانات والتصور باستخدام بايثون
تحليل البيانات والتصور باستخدام بايثون | مجموعة 2
العمليات الحسابية لتحليل البيانات
الشروع في العمل مع Jupyter Notebook | بايثون

نومبي
بيثون نومبي
نومبي | ndarray
نومبي | إنشاء المصفوفة
نومبي | كائنات نوع البيانات
نوع البيانات Object (dtype) في NumPy
نومبي | الفهرسة
نومبي | التقطيع الأساسي والفهرسة المتقدمة
نومبي | التكرار فوق المصفوفة
نومبي | العمليات الثنائية
نومبي | الجبر الخطي
نومبي | الفرز والبحث والعد

الباندا
دروس الباندا
بايثون | Pandas DataFrame
إنشاء Pandas DataFrame
التعامل مع الصفوف والأعمدة في Pandas DataFrame
فهرسة واختيار البيانات مع الباندا
الفهرسة المنطقية في الباندا
وظائف التحويل في Pandas DataFrame
التكرار على الصفوف والأعمدة في Pandas DataFrame
العمل مع البيانات المفقودة في الباندا
بايثون | سلسلة الباندا
تحليل البيانات باستخدام الباندا
قراءة csv باستخدام pandas.read_csv ()

تعلم الآلة باستخدام بايثون
دروس تعلم الآلة
الانحدارالخطي
فهم الانحدار اللوجستي
K تعني Clustering
بايثون | تصنيف الصور باستخدام keras
إنشاء نموذج بسيط للتعلم الآلي
بايثون | تنفيذ نظام فيلم التوصية
ML | تحدي بوسطن للإسكان Kaggle مع الانحدار الخطي
تصنيف الخلايا السرطانية باستخدام Scikit-Learn
حفظ نموذج التعلم الآلي
تطبيق الشبكة العصبية التلافيفية على مجموعة البيانات mnist
بايثون | تحليل البرمجة اللغوية العصبية لمراجعات المطعم
بناء نموذج التعلم في Scikit-Learn
تنفيذ عملية التدريب على الشبكة العصبية الاصطناعية
شبكة عصبية واحدة في بايثون
بايثون | كيف وأين يتم تطبيق ميزة التحجيم؟
تحديد الأرقام المكتوبة بخط اليد باستخدام الانحدار اللوجستي في PyTorch

Python GUI
برنامج Tkinter التعليمي
دروس كيفي
Python GUI - tkinter
آلة حاسبة بسيطة باستخدام واجهة المستخدم الرسومية Tkinter
استمارة تسجيل بسيطة باستخدام Tkinter
قم بإنشاء ساعة توقيت باستخدام بيثون
تصميم تطبيقات واجهة المستخدم الرسومية باستخدام PyQt
لعبة ملونة باستخدام Tkinter في Python
جعل المفكرة باستخدام Tkinter
تشفير الرسائل-فك باستخدام Tkinter
محول العملات في الوقت الحقيقي باستخدام Tkinter

الوحدات في بايثون
مقدمة من وحدات
وحدة نظام التشغيل
وحدة التقويم
وحدة Python Urllib
الطباعة
وظيفة توقيت
وحدة الاستيراد

العمل مع قاعدة البيانات
MongoDB و Python
SQL باستخدام Python | مجموعة 1
SQL باستخدام Python و SQLite | مجموعة 2
SQL باستخدام Python | المجموعة 3 (التعامل مع البيانات الكبيرة)
إدراج المتغيرات في جدول قاعدة البيانات باستخدام بايثون
اتصال MYSQLdb في بايثون
إدارة قواعد البيانات في PostgreSQL
Oracle Database Connection في Python

متفرقات
10 نصائح وحيل أساسية للبايثون للمبرمجين
اختراقات مذهلة لبايثون
طريقة الإدخال للبرمجة الحسابية
نصائح لتحسين كود بايثون
لماذا يعتبر استيراد النجم في بايثون فكرة سيئة
لماذا تعتبر لغة Python هي الأنسب للترميز التنافسي؟
تريكس بايثون للترميز التنافسي

التطبيقات والمشاريع
بايثون | برنامج للزحف إلى صفحة ويب والحصول على الكلمات الأكثر تكرارا
تسجيل الدخول إلى Facebook باستخدام Python
FB الدردشة من خلال بيثون
أداة صياغة التعليمات البرمجية C / C ++
ابحث عن حالة التشغيل المباشر و PNR لأي قطار باستخدام واجهة برمجة تطبيقات السكك الحديدية
جلب أهم الأخبار باستخدام News API
إحضار نص من Infobox لـ Wikipedia في Python
احصل على مشاعر من الصور باستخدام Microsoft emotion API في Python
مانع الموقع
إرسال تحديثات الرسائل القصيرة إلى الهاتف المحمول باستخدام بيثون
برنامج Python Desktop News Notifier في 20 سطرًا
مترجم شفرة مورس في بيثون
إجراء بحث Google باستخدام كود Python
قراءة وتوليد كود qr
تطبيق تذكير عيد ميلاد في بيثون
برنامج لعرض العلامة الفلكية أو البرج لتاريخ الميلاد المحدد
تتبع هجرة الطيور
مخطر الأخبار
whatsapp باستخدام بيثون
بايثون | أتمتة منشور عيد ميلاد سعيد على Facebook باستخدام السيلينيوم
صمم Keylogger في Python
بايثون | تنفيذ نظام فيلم التوصية
يوصى بدروس بايثون التعليمية
دروس بايثون
دروس تعلم الآلة
دروس جانغو
دروس الباندا
برنامج OpenCV Python التعليمي
سيلينيوم بايثون تعليمي
برنامج بايثون تكينتر التعليمي

